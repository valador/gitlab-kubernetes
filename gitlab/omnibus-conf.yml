apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-omnibus
  namespace: gitlab
  labels:
    app: gitlab
data:
  gitlab_omnibus_config: |
    # Components
    gitlab_rails['ldap_enabled'] = false
    prometheus['monitor_kubernetes'] = false
    prometheus_monitoring['enable'] = false
    prometheus['enable'] = false
    grafana['enable'] = false
    letsencrypt['enable'] = false
    postgresql['enable'] = false
    redis['enable'] = false
    
    # Base
    external_url "https://gitlab.dev-srv.home.lan"
    nginx['enable'] = true
    nginx['listen_port'] = 80
    nginx['listen_https'] = false
    # nginx['redirect_http_to_https'] = false
    # nginx['proxy_set_headers'] = {
    #   "X-Forwarded-Proto" => "http",
    #   "CUSTOM_HEADER" => "VALUE"
    # }
    nginx['proxy_set_headers'] = {
      'X-Forwarded-Proto' => 'https',
      'X-Forwarded-Ssl' => 'on'
    }
    
    # Backup
    gitlab_rails['backup_path'] = '/mnt/backups'
    gitlab_rails['backup_keep_time'] = 604800
    
    # DataDirs
    git_data_dirs({"default" => { "path" => "/gitlab-data/git-data"} })
    gitlab_rails['uploads_directory'] = '/gitlab-data/uploads'
    gitlab_rails['shared_path'] = '/gitlab-data/shared'
    gitlab_ci['builds_directory'] = '/gitlab-data/builds'
    
    # Runner
    gitlab_rails['initial_shared_runners_registration_token'] = "YrPPR6TUUv3AzRjAKLiB"
    
    # SSH
    gitlab_rails['gitlab_shell_ssh_port'] = 32222
    
    # DB
    gitlab_rails['db_username'] = "gitlab"
    gitlab_rails['db_password'] = "gitlab"
    gitlab_rails['db_host'] = "postgresql-svc"
    gitlab_rails['db_port'] = "5432"
    gitlab_rails['db_database'] = "gitlab_home_dev"
    gitlab_rails['db_adapter'] = 'postgresql'
    gitlab_rails['db_encoding'] = 'utf8'
    
    # ROOT password
    gitlab_rails['initial_root_password'] = "secret_pass"
    
    # Redis
    gitlab_rails['redis_host'] = 'redis-svc'
    gitlab_rails['redis_port'] = '6379'
    
    # Registry
    gitlab_rails['registry_enabled'] = true
    gitlab_rails['registry_api_url'] = "http://docker-registry-svc:5000"
    gitlab_rails['registry_issuer'] = "gitlab-issuer"
    registry['internal_key'] = File.read("/reg-auth-cert/reg-auth.key")

    registry_external_url 'https://reg.dev-srv.home.lan'
    registry_nginx['listen_port'] = 5005
    registry_nginx['listen_https'] = false
    # registry_nginx['redirect_http_to_https'] = false
    registry_nginx['proxy_set_headers'] = {
      'X-Forwarded-Proto' => 'https',
      'X-Forwarded-Ssl' => 'on'
    }
    # registry_nginx['proxy_set_headers'] = {
    #   "X-Forwarded-Proto" => "http",
    #   "CUSTOM_HEADER" => "VALUE"
    # }
    # registry_nginx['proxy_set_headers'] = { 
    #   "Host" => "$http_host", 
    #   "X-Real-IP" => "$remote_addr", 
    #   "X-Forwarded-For" => "$proxy_add_x_forwarded_for", 
    #   "X-Forwarded-Proto" => "https", 
    #   "X-Forwarded-Ssl" => "on"
    #   }
    # registry['notifications'] = [
    #   {
    #     'name' => 'registry_endpoint',
    #     'url' => 'http://gitlab-svc/notify',
    #     'timeout' => '500ms',
    #     'threshold' => 5,
    #     'backoff' => '1s',
    #     'headers' => {
    #       "Authorization" => ["UBER_TOKEN"]
    #     }
    #   }
    # ]
