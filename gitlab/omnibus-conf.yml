apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-omnibus
  namespace: gitlab
  labels:
    app: gitlab
data:
  gitlab_omnibus_config: |
    ## Components
    gitlab_rails['ldap_enabled'] = false
    prometheus['monitor_kubernetes'] = false
    prometheus_monitoring['enable'] = false
    prometheus['enable'] = false
    grafana['enable'] = false
    letsencrypt['enable'] = false
    postgresql['enable'] = false
    redis['enable'] = false
    
    ## Base
    gitlab_rails['time_zone'] = 'Europe/Moscow'
    external_url "https://gitlab.server.lan"
    nginx['enable'] = true
    nginx['listen_port'] = 80
    nginx['listen_https'] = false
    # nginx['redirect_http_to_https'] = false
    nginx['proxy_set_headers'] = {
      'X-Forwarded-Proto' => 'https',
      'X-Forwarded-Ssl' => 'on'
    }
    
    ## Backup
    gitlab_rails['backup_path'] = '/mnt/backups'
    gitlab_rails['backup_keep_time'] = 604800
    
    ## DataDirs
    git_data_dirs({"default" => { "path" => "/gitlab-data/git-data"} })
    gitlab_rails['uploads_directory'] = '/gitlab-data/uploads'
    gitlab_rails['shared_path'] = '/gitlab-data/shared'
    gitlab_ci['builds_directory'] = '/gitlab-data/builds'
    gitlab_rails['registry_path'] = '/gitlab-data/registry'
    gitlab_rails['pages_path'] = "/gitlab-data/pages"
    
    ## Runner
    gitlab_rails['initial_shared_runners_registration_token'] = "YrPPR6TUUv3AzRjAKLiB"
    
    ## SSH
    gitlab_rails['gitlab_shell_ssh_port'] = 32222
    
    ## DB
    gitlab_rails['db_username'] = "gitlab"
    gitlab_rails['db_password'] = "gitlab"
    gitlab_rails['db_host'] = "postgresql-svc"
    gitlab_rails['db_port'] = "5432"
    gitlab_rails['db_database'] = "gitlab_home_dev"
    gitlab_rails['db_adapter'] = 'postgresql'
    gitlab_rails['db_encoding'] = 'utf8'
    
    ## ROOT password
    gitlab_rails['initial_root_password'] = "secret_pass"
    
    ## Redis
    gitlab_rails['redis_host'] = 'redis-svc'
    gitlab_rails['redis_port'] = '6379'
    # gitlab_rails['redis_database'] = 0

    ## Pages
    # not a subdomain of external_url
    pages_external_url "https://pages.server.lan/"
    gitlab_pages['enable'] = true
    # Set listen-proxy when behind reverse proxy. see https://docs.gitlab.com/ee/administration/pages/#configure-listener-for-reverse-proxy-requests
    # gitlab_pages['listen_proxy'] = "0.0.0.0:8090"
    pages_nginx['listen_port'] = 8090
    pages_nginx['listen_https'] = false
    # Conflict with chroot, see docs in Gitlab
    # gitlab_pages['access_control'] = true
    # Required due to https://gitlab.com/gitlab-org/gitlab-pages/issues/129
    # gitlab_pages['inplace_chroot'] = true
    pages_nginx['proxy_set_headers'] = {
      'X-Forwarded-Proto' => 'https',
      'X-Forwarded-Ssl' => 'on'
    }

    ## Sidekiq, required for emails and other stuff to work
    sidekiq['enable'] = true
    # sidekiq['concurrency'] = 25 # Single-process sidekiq only
    sidekiq['interval'] = nil
    sidekiq['log_directory'] = "/var/log/gitlab/sidekiq"
    sidekiq['log_format'] = "json"
    sidekiq['max_concurrency'] = 25
    sidekiq['min_concurrency'] = 15
    sidekiq['shutdown_timeout'] = 4
    sidekiq['queue_groups'] = ["*"]
    sidekiq['negate'] = false
    # sidekiq['metrics_enabled'] = true
    sidekiq['listen_address'] = "localhost"
    sidekiq['listen_port'] = 8082

    ## Registry
    # For internal registry
    # registry_external_url 'https://reg.gitlab.server.lan'
    gitlab_rails['registry_enabled'] = true
    gitlab_rails['registry_api_url'] = "http://docker-registry-svc:5000"
    gitlab_rails['registry_issuer'] = "gitlab-issuer"
    # Key for comunicate with external registry
    registry['internal_key'] = File.read("/reg-auth-cert/reg-auth.key")
    # Store generated\added key for registry
    gitlab_rails['registry_key_path'] = "/gitlab-data/gitlab-registry.key"
    # For internal registry
    #registry['internal_certificate'] = File.read("/reg-auth-cert/reg-auth.crt")
    # Disable internal registry, we use external
    registry['enable'] = false
    # For page "Container Registry" in project
    gitlab_rails['registry_host'] = "reg.gitlab.server.lan"
    # gitlab_rails['registry_port'] = "5005"
    # For internal registry
    # registry_nginx['listen_port'] = 5005
    registry_nginx['listen_https'] = false
    # registry_nginx['redirect_http_to_https'] = false
    registry_nginx['proxy_set_headers'] = {
      'X-Forwarded-Proto' => 'https',
      'X-Forwarded-Ssl' => 'on'
    }
    gitlab_rails['registry_notification_secret'] = "Yf2_p3iUQYUQbyH-rubPPyP8dpCZkQzA"
    # registry['notifications'] = [
    #   {
    #     'name' => 'registry_endpoint',
    #     'url' => 'https://gitlab.server.lan/notify2',
    #     'timeout' => '500ms',
    #     'threshold' => 5,
    #     'backoff' => '1s',
    #     'headers' => {
    #       "Authorization" => ["Yf2_p3iUQYUQbyH-rubPPyP8dpCZkQzA"]
    #     }
    #   }
    # ]
