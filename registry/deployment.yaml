apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: docker-registry
  namespace: gitlab
spec:
  selector:
    matchLabels:
      app: docker-registry
  serviceName: "docker-registry-svc"
  replicas: 1
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: docker-registry
        image: registry:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: REGISTRY_HTTP_ADDR
          value: "0.0.0.0:5000"
        - name: REGISTRY_HTTP_SECRET
          value: "your-http-secret"
        - name: REGISTRY_HTTP_RELATIVEURLS
          value: "true"
        # Auth
        - name: REGISTRY_AUTH
          value: "token"
        - name: REGISTRY_AUTH_TOKEN_REALM
          value: "http://gitlab-svc/jwt/auth"
        - name: REGISTRY_AUTH_TOKEN_SERVICE
          value: "container_registry"
        - name: REGISTRY_AUTH_TOKEN_ISSUER
          value: "gitlab-issuer"
        - name: REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE
          value: "/reg-auth-cert/auth.crt"
        # Storage
        - name: REGISTRY_STORAGE_DELETE_ENABLED
          value: "true"
        - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
          value: "/var/lib/registry"
        - name: REGISTRY_STORAGE_CACHE_BLOBDESCRIPTOR
          value: "redis"
        # Health
        - name: REGISTRY_HEALTH_STORAGEDRIVER_ENABLED
          value: "true"
        - name: REGISTRY_HEALTH_STORAGEDRIVER_INTERVAL
          value: "10s"
        - name: REGISTRY_HEALTH_STORAGEDRIVER_THRESHOLD
          value: "3"
        # LOG
        # - name: REGISTRY_LOG_LEVEL
        #   value: "debug"
        - name: REGISTRY_LOG_FIELDS_SERVICE
          value: "registry"
        # REDIS
        - name: REGISTRY_REDIS_ADDR
          value: "redis-svc:6379"
        # - name: REGISTRY_REDIS_PASSWORD
        #   value: redispass
        ports:
        - containerPort: 5000
          protocol: TCP
        # livenessProbe:
        #   failureThreshold: 3
        #   httpGet:
        #     path: /
        #     port: 5000
        #     scheme: HTTP
        #   periodSeconds: 10
        #   successThreshold: 1
        #   timeoutSeconds: 1
        # readinessProbe:
        #   failureThreshold: 3
        #   httpGet:
        #     path: /
        #     port: 5000
        #     scheme: HTTP
        #   periodSeconds: 10
        #   successThreshold: 1
        #   timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        # - name: gitlab-reg-auth
        #   mountPath: /gitlab-reg-auth
        # - mountPath: /var/lib/registry/
        #   name: data
        # - mountPath: /certs
        #   name: auth-cert
        - mountPath: /reg-auth-cert
          name: reg-cert
      volumes:
      # - name: gitlab-reg-auth
      #   persistentVolumeClaim:
      #     claimName: gitlab-reg-auth-readonly-claim
      # - name: auth-cert
      #   secret:
      #     secretName: root-secret
      - name: reg-cert
        secret:
          secretName: gitlab-reg-auth
  # volumeClaimTemplates:
  # - metadata:
  #     name: data
  #   spec:
  #     accessModes: [ "ReadWriteOnce" ]
  #     storageClassName: "local-path"
  #     resources:
  #       requests:
  #         storage: 20Gi
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: gitlab-reg-auth-vol
#   namespace: gitlab
#   labels:
#     type: local
# spec:
#   capacity:
#     storage: 20Mi
#   accessModes:
#     #- ReadOnlyMany
#     - ReadWriteOnce
#   # persistentVolumeReclaimPolicy: Delete
#   storageClassName: gitlab-reg-auth #Задаем имя класса хранилища
#   hostPath:
#     path: "/srv/gitlab"
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: gitlab-reg-auth-claim
#   namespace: gitlab
#   labels:
#     app: gitlab
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 10Mi
#   storageClassName: gitlab-reg-auth
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: docker-registry
  name: docker-registry-svc
  namespace: gitlab
spec:
  #externalTrafficPolicy: Cluster
  ports:
  - name: registry
    #nodePort: 31500
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: docker-registry
  sessionAffinity: None
  #type: NodePort
  type: ClusterIP
---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: gitlab-reg-auth-readonly-claim
#   namespace: gitlab
#   labels:
#     app: gitlab
# spec:
#   accessModes:
#     - ReadWriteMany
#   resources:
#     requests:
#       storage: 512Mi
#   selector:
#     matchLabels:
#       app: gitlab
#       tiers: registry
#   # storageClassName: gitlab-reg-auth